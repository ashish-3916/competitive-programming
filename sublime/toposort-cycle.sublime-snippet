<snippet>
	<content><![CDATA[
const int N = 100001;

vector<int> graph[N] ;
vector<bool> visited(N , false);
vector<int> ans  ;

vector<int>intime(N , 0) , outtime(N , 0) ;
int timer = 1 ;

bool iscycle(int sv)
{
	visited[sv] = 1;

	intime[sv] = timer++ ;

	for (int child :  graph[sv])
	{
		if (!visited[child])
		{
			if (iscycle(child))
				return true;
		}
		else
		{
			if (intime[sv] > intime[child]  and outtime[child] == 0 )
				return true;
		}
	}

	ans.push_back(sv);

	outtime[sv] = timer++;

	return false;
}
// call for unconnected graph
// if cycle return false;
// else print in reverse order
]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	 <tabTrigger>toposort-cycle</tabTrigger> 
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<!-- <scope>source.python</scope> -->
</snippet>
